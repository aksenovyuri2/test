import React, { useState } from 'react';
import { useSession } from 'next-auth/react';
import { AchievementCard } from '@/components/AchievementCard';
import { MetricRecommendations } from '@/components/MetricRecommendations';
import { MetricComparison } from '@/components/MetricComparison';
import { MetricAlert } from '@/components/MetricAlert';
import { DataExport } from '@/components/DataExport';

// –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const sampleAchievements = [
  {
    id: 1,
    title: '–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏',
    description: '–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ—é –ø–µ—Ä–≤—É—é –º–µ—Ç—Ä–∏–∫—É',
    icon: 'üéØ',
    progress: 100,
    isUnlocked: true,
  },
  {
    id: 2,
    title: '–ê–Ω–∞–ª–∏—Ç–∏–∫',
    description: '–ü—Ä–æ—Å–ª–µ–¥–∏—Ç–µ 10 –º–µ—Ç—Ä–∏–∫',
    icon: 'üìä',
    progress: 60,
    isUnlocked: false,
  },
  // –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
];

const sampleRecommendations = [
  {
    id: 1,
    metric: '–ö–æ–Ω–≤–µ—Ä—Å–∏—è',
    description: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–≤–µ–ª–∏—á–∏—Ç—å –∫–æ–Ω–≤–µ—Ä—Å–∏—é –Ω–∞ 5%',
    impact: 'high' as const,
  },
  {
    id: 2,
    metric: '–í—Ä–µ–º—è –Ω–∞ —Å–∞–π—Ç–µ',
    description: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø—Ä–æ–≤–æ–¥—è—Ç –º–µ–Ω—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Å–∞–π—Ç–µ',
    impact: 'medium' as const,
  },
  // –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
];

const sampleComparison = [
  {
    id: 1,
    metric: '–ü—Ä–æ–¥–∞–∂–∏',
    currentValue: 150,
    previousValue: 120,
    change: 25,
  },
  {
    id: 2,
    metric: '–¢—Ä–∞—Ñ–∏–∫',
    currentValue: 1000,
    previousValue: 800,
    change: 25,
  },
  // –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –º–µ—Ç—Ä–∏–∫ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
];

const sampleAlerts = [
  {
    id: 1,
    metric: '–û—Ç–∫–∞–∑—ã',
    message: '–†–µ–∑–∫–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –æ—Ç–∫–∞–∑–æ–≤ –Ω–∞ 20%',
    severity: 'high' as const,
    timestamp: new Date().toISOString(),
  },
  {
    id: 2,
    metric: '–ö–æ–Ω–≤–µ—Ä—Å–∏—è',
    message: '–°–Ω–∏–∂–µ–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –Ω–∞ 5%',
    severity: 'medium' as const,
    timestamp: new Date().toISOString(),
  },
  // –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
];

const availableMetrics = [
  { id: 1, name: '–ü—Ä–æ–¥–∞–∂–∏' },
  { id: 2, name: '–¢—Ä–∞—Ñ–∏–∫' },
  { id: 3, name: '–ö–æ–Ω–≤–µ—Ä—Å–∏—è' },
  // –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –º–µ—Ç—Ä–∏–∫ –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
];

export default function Profile() {
  const { data: session } = useSession();
  const [activeTab, setActiveTab] = useState('achievements');

  if (!session) {
    return <div>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É</div>;
  }

  return (
    <div className="container mx-auto px-4 py-8">
      <h1 className="text-3xl font-bold mb-8">–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h1>
      
      <div className="flex space-x-4 mb-8">
        <button
          onClick={() => setActiveTab('achievements')}
          className={`px-4 py-2 rounded ${
            activeTab === 'achievements'
              ? 'bg-blue-500 text-white'
              : 'bg-gray-200'
          }`}
        >
          –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        </button>
        <button
          onClick={() => setActiveTab('metrics')}
          className={`px-4 py-2 rounded ${
            activeTab === 'metrics'
              ? 'bg-blue-500 text-white'
              : 'bg-gray-200'
          }`}
        >
          –ú–µ—Ç—Ä–∏–∫–∏
        </button>
        <button
          onClick={() => setActiveTab('alerts')}
          className={`px-4 py-2 rounded ${
            activeTab === 'alerts'
              ? 'bg-blue-500 text-white'
              : 'bg-gray-200'
          }`}
        >
          –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        </button>
        <button
          onClick={() => setActiveTab('export')}
          className={`px-4 py-2 rounded ${
            activeTab === 'export'
              ? 'bg-blue-500 text-white'
              : 'bg-gray-200'
          }`}
        >
          –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
        </button>
      </div>

      <div className="mt-8">
        {activeTab === 'achievements' && (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {sampleAchievements.map((achievement) => (
              <AchievementCard key={achievement.id} achievement={achievement} />
            ))}
          </div>
        )}

        {activeTab === 'metrics' && (
          <div className="space-y-8">
            <MetricRecommendations recommendations={sampleRecommendations} />
            <MetricComparison metrics={sampleComparison} />
          </div>
        )}

        {activeTab === 'alerts' && (
          <div className="space-y-4">
            {sampleAlerts.map((alert) => (
              <MetricAlert key={alert.id} alert={alert} />
            ))}
          </div>
        )}

        {activeTab === 'export' && (
          <DataExport availableMetrics={availableMetrics} />
        )}
      </div>
    </div>
  );
} 