import { useEffect, useState } from 'react';
import { useSession } from 'next-auth/react';
import { useRouter } from 'next/router';
import Layout from '@/components/Layout';
import { motion } from 'framer-motion';
import { AchievementCard } from '@/components/AchievementCard';
import { MetricRecommendations } from '@/components/MetricRecommendations';
import { MetricComparison } from '@/components/MetricComparison';
import { MetricAlert } from '@/components/MetricAlert';
import { DataExport } from '@/components/DataExport';
import { UserTasks, Task } from '@/components/UserTasks';
import { UserProgress, UserStats } from '@/components/UserProgress';

// –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
const sampleAchievements = [
  {
    id: '1',
    title: '–ü–µ—Ä–≤—ã–µ 10 –º–µ—Ç—Ä–∏–∫',
    description: '–î–æ–±–∞–≤—å—Ç–µ 10 –º–µ—Ç—Ä–∏–∫ –≤ —Å–∏—Å—Ç–µ–º—É',
    icon: 'üìä',
    progress: 100,
    unlockedAt: new Date('2023-10-15')
  },
  {
    id: '2',
    title: '–ê–Ω–∞–ª–∏—Ç–∏–∫',
    description: '–ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ 30 –æ—Ç—á–µ—Ç–æ–≤',
    icon: 'üìà',
    progress: 65,
  },
  {
    id: '3',
    title: '–≠–∫—Å–ø–µ—Ä—Ç',
    description: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã',
    icon: 'üîç',
    progress: 35,
  },
];

const sampleUserStats: UserStats = {
  totalPoints: 450,
  level: 3,
  completedTasks: 8,
  totalTasks: 15,
  successRate: 85,
  strengths: [
    '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö',
    '–†–∞–±–æ—Ç–∞ —Å –º–µ—Ç—Ä–∏–∫–∞–º–∏',
    '–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏'
  ],
  areasToImprove: [
    '–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–µ–Ω–¥–æ–≤',
    '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–Ω–µ—à–Ω–∏–º–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏'
  ],
  nextLevelPoints: 800
};

const sampleTasks: Task[] = [
  {
    id: 't1',
    title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫',
    description: '–°–æ–∑–¥–∞–π—Ç–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ 5 –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞.',
    complexity: 'easy',
    points: 50,
    status: 'completed',
    completedAt: new Date('2023-10-10'),
    steps: [
      { id: 's1', description: '–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏', isCompleted: true },
      { id: 's2', description: '–°–æ–∑–¥–∞—Ç—å 5 –º–µ—Ç—Ä–∏–∫ –≤ —Å–∏—Å—Ç–µ–º–µ', isCompleted: true },
      { id: 's3', description: '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ—Ä–æ–≥–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è', isCompleted: true }
    ]
  },
  {
    id: 't2',
    title: '–ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤',
    description: '–ü—Ä–æ–≤–µ–¥–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü –∏ –ø–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –æ—Ç—á–µ—Ç.',
    complexity: 'medium',
    points: 100,
    status: 'in_progress',
    dueDate: new Date('2023-12-15'),
    steps: [
      { id: 's1', description: '–°–æ–±—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü', isCompleted: true },
      { id: 's2', description: '–í—ã—è–≤–∏—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Ç—Ä–µ–Ω–¥—ã', isCompleted: true },
      { id: 's3', description: '–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö', isCompleted: false },
      { id: 's4', description: '–°–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏', isCompleted: false }
    ]
  },
  {
    id: 't3',
    title: '–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞',
    description: '–†–∞–∑—Ä–∞–±–æ—Ç–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –ø–∞–Ω–µ–ª—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª—é—á–µ–≤—ã—Ö –º–µ—Ç—Ä–∏–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.',
    complexity: 'hard',
    points: 200,
    status: 'pending',
    dueDate: new Date('2023-12-30'),
    steps: [
      { id: 's1', description: '–°–ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∞–∫–µ—Ç –ø–∞–Ω–µ–ª–∏', isCompleted: false },
      { id: 's2', description: '–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏', isCompleted: false },
      { id: 's3', description: '–î–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã', isCompleted: false },
      { id: 's4', description: '–ü—Ä–æ–≤–µ—Å—Ç–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', isCompleted: false },
      { id: 's5', description: '–í–Ω–µ–¥—Ä–∏—Ç—å –ø–∞–Ω–µ–ª—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å', isCompleted: false }
    ]
  }
];

const sampleRecommendations = [
  {
    metric: '–ö–æ–Ω–≤–µ—Ä—Å–∏—è',
    description: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å–∞–¥–æ—á–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –∫–æ–Ω–≤–µ—Ä—Å–∏–∏',
    reason: '–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å —Å–Ω–∏–∑–∏–ª—Å—è –Ω–∞ 5% –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü',
    impact: 'high' as const,
  },
  {
    metric: '–°—Ä–µ–¥–Ω–∏–π —á–µ–∫',
    description: '–í–Ω–µ–¥—Ä–∏—Ç–µ –±–æ–ª—å—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –ø–æ –¥–æ–ø—Ä–æ–¥–∞–∂–∞–º',
    reason: '–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞ —Å—Ä–µ–¥–Ω–µ–≥–æ —á–µ–∫–∞ –Ω–∞ 15%',
    impact: 'medium' as const,
  },
];

const sampleComparisonData = [
  {
    metric: '–ü–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å —Å–∞–π—Ç–∞',
    currentValue: 15420,
    previousValue: 12340,
    changePercentage: 25,
    unit: '–ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π'
  },
  {
    metric: '–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –æ—Ç–∫–∞–∑–æ–≤',
    currentValue: 35.2,
    previousValue: 42.7,
    changePercentage: -17.5,
    unit: '%'
  },
];

const sampleAlerts = [
  {
    id: '1',
    metric: '–ö–æ–Ω–≤–µ—Ä—Å–∏—è',
    message: '–†–µ–∑–∫–æ–µ –ø–∞–¥–µ–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –Ω–∞ 15% –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞',
    severity: 'critical' as const,
    timestamp: new Date('2023-11-05T14:30:00'),
    isRead: false
  },
  {
    id: '2',
    metric: '–¢—Ä–∞—Ñ–∏–∫',
    message: '–ù–µ–æ–±—ã—á–Ω–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ç—Ä–∞—Ñ–∏–∫–∞ –Ω–∞ 40%',
    severity: 'warning' as const,
    timestamp: new Date('2023-11-04T09:15:00'),
    isRead: true
  },
  {
    id: '3',
    metric: 'API',
    message: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ API –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é',
    severity: 'info' as const,
    timestamp: new Date('2023-11-03T16:45:00'),
    isRead: false
  },
];

const sampleExportMetrics = [
  { id: '1', name: '–ü–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å', category: '–¢—Ä–∞—Ñ–∏–∫' },
  { id: '2', name: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–∏', category: '–¢—Ä–∞—Ñ–∏–∫' },
  { id: '3', name: '–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –æ—Ç–∫–∞–∑–æ–≤', category: '–í–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å' },
  { id: '4', name: '–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –Ω–∞ —Å–∞–π—Ç–µ', category: '–í–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å' },
  { id: '5', name: '–ö–æ–Ω–≤–µ—Ä—Å–∏—è', category: '–ü—Ä–æ–¥–∞–∂–∏' },
  { id: '6', name: '–°—Ä–µ–¥–Ω–∏–π —á–µ–∫', category: '–ü—Ä–æ–¥–∞–∂–∏' },
];

interface Profile {
  totalPoints: number;
  level: number;
  completedTasks: number;
  successRate: number;
}

export default function ProfilePage() {
  const { data: session, status } = useSession();
  const router = useRouter();
  const [profile, setProfile] = useState<Profile | null>(null);
  const [loading, setLoading] = useState(true);
  const [activeTab, setActiveTab] = useState<'dashboard' | 'tasks' | 'achievements' | 'metrics' | 'alerts' | 'export'>('dashboard');

  useEffect(() => {
    if (status === 'unauthenticated') {
      router.push('/auth/signin');
    }
  }, [status, router]);

  useEffect(() => {
    const fetchProfile = async () => {
      try {
        const response = await fetch('/api/profile');
        if (response.ok) {
          const data = await response.json();
          setProfile(data);
        } else {
          console.error('Failed to fetch profile');
        }
      } catch (error) {
        console.error('Error:', error);
      } finally {
        setLoading(false);
      }
    };

    if (session) {
      fetchProfile();
    }
  }, [session]);

  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞–¥–∞–Ω–∏—è–º–∏
  const handleStartTask = (taskId: string) => {
    console.log(`–ù–∞—á–∞–ª–æ –∑–∞–¥–∞–Ω–∏—è ${taskId}`);
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã API-–∑–∞–ø—Ä–æ—Å –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞–Ω–∏—è
  };

  const handleCompleteTask = (taskId: string) => {
    console.log(`–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è ${taskId}`);
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã API-–∑–∞–ø—Ä–æ—Å –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ –∑–∞–¥–∞–Ω–∏—è –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–≥–æ
  };

  const handleCompleteStep = (taskId: string, stepId: string) => {
    console.log(`–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∞–≥–∞ ${stepId} –∑–∞–¥–∞–Ω–∏—è ${taskId}`);
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã API-–∑–∞–ø—Ä–æ—Å –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ —à–∞–≥–∞ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–≥–æ
  };

  const handleMarkAlertAsRead = (alertId: string) => {
    console.log(`Marking alert ${alertId} as read`);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ API –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  };

  const handleExportData = (
    selectedMetrics: string[], 
    format: 'csv' | 'excel' | 'json', 
    dateRange: { from: string, to: string }
  ) => {
    console.log('Exporting data:', { selectedMetrics, format, dateRange });
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ API –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
  };

  if (status === 'loading' || loading) {
    return (
      <Layout>
        <div className="flex justify-center items-center min-h-[60vh]">
          <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500"></div>
        </div>
      </Layout>
    );
  }

  if (!session) {
    return null;
  }

  return (
    <Layout>
      <div className="max-w-4xl mx-auto">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          className="bg-white rounded-lg shadow-lg p-8"
        >
          <div className="flex items-center mb-8">
            <div className="w-20 h-20 bg-blue-500 rounded-full flex items-center justify-center text-white text-2xl font-bold">
              {session.user?.name?.[0] || session.user?.email?.[0] || '?'}
            </div>
            <div className="ml-6">
              <h1 className="text-2xl font-bold">{session.user?.name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}</h1>
              <p className="text-gray-600">{session.user?.email}</p>
            </div>
          </div>

          {profile && (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              <motion.div
                initial={{ opacity: 0, scale: 0.9 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ delay: 0.1 }}
                className="bg-blue-50 rounded-lg p-6 text-center"
              >
                <h3 className="text-lg font-semibold text-gray-600 mb-2">–£—Ä–æ–≤–µ–Ω—å</h3>
                <p className="text-3xl font-bold text-blue-600">{profile.level}</p>
              </motion.div>

              <motion.div
                initial={{ opacity: 0, scale: 0.9 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ delay: 0.2 }}
                className="bg-green-50 rounded-lg p-6 text-center"
              >
                <h3 className="text-lg font-semibold text-gray-600 mb-2">–û—á–∫–∏</h3>
                <p className="text-3xl font-bold text-green-600">{profile.totalPoints}</p>
              </motion.div>

              <motion.div
                initial={{ opacity: 0, scale: 0.9 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ delay: 0.3 }}
                className="bg-yellow-50 rounded-lg p-6 text-center"
              >
                <h3 className="text-lg font-semibold text-gray-600 mb-2">–ó–∞–≤–µ—Ä—à–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤</h3>
                <p className="text-3xl font-bold text-yellow-600">{profile.completedTasks}</p>
              </motion.div>

              <motion.div
                initial={{ opacity: 0, scale: 0.9 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ delay: 0.4 }}
                className="bg-purple-50 rounded-lg p-6 text-center"
              >
                <h3 className="text-lg font-semibold text-gray-600 mb-2">–£—Å–ø–µ—à–Ω–æ—Å—Ç—å</h3>
                <p className="text-3xl font-bold text-purple-600">{profile.successRate}%</p>
              </motion.div>
            </div>
          )}
        </motion.div>
      </div>
    </Layout>
  );
} 